package sangria.gateway.schema.materializer.directive

import java.time.{ZoneId, ZonedDateTime}
import java.util.concurrent.TimeUnit
import java.util.Random
import java.util.regex.Pattern

import com.github.javafaker.Faker
import sangria.gateway.schema.CustomScalars
import sangria.gateway.schema.materializer.GatewayContext
import sangria.renderer.SchemaRenderer
import sangria.schema._

class FakerDirectiveProvider extends DirectiveProvider {
  import FakerDirectiveProvider._

  def resolvers(ctx: GatewayContext) = Seq(
    AdditionalDirectives(Seq(Dirs.FakeConfig)),
    DirectiveResolver(Dirs.Fake, c ⇒ c.withArgs(Args.Expr, Args.Type, Args.MinElems, Args.MaxElems, Args.Past, Args.Future) { (expr, tpe, min, max, past, future) ⇒
      FakeValue(expr orElse tpe, min, max, past, future, c.ctx.ctx.rnd.get, c.ctx.ctx.faker.get).coerce(c.ctx)
    })
  )

  override def anyResolver = Some({
    case c if c.value.isInstanceOf[FakeValue] ⇒ c.value.asInstanceOf[FakeValue].coerce(c)
  })
}

object FakerDirectiveProvider {
  val FakeType =
    EnumType[String]("FakeType", Some("The type of the content generated by the faker"), List(
      EnumValue("AddressBuildingNumber", Some("Represents faker expression `address.buildingNumber`."), "address.buildingNumber"),
      EnumValue("AddressCity", Some("Represents faker expression `address.city`."), "address.city"),
      EnumValue("AddressCityName", Some("Represents faker expression `address.cityName`."), "address.cityName"),
      EnumValue("AddressCityPrefix", Some("Represents faker expression `address.cityPrefix`."), "address.cityPrefix"),
      EnumValue("AddressCitySuffix", Some("Represents faker expression `address.citySuffix`."), "address.citySuffix"),
      EnumValue("AddressCountry", Some("Represents faker expression `address.country`."), "address.country"),
      EnumValue("AddressCountryCode", Some("Represents faker expression `address.countryCode`."), "address.countryCode"),
      EnumValue("AddressFirstName", Some("Represents faker expression `address.firstName`."), "address.firstName"),
      EnumValue("AddressFullAddress", Some("Represents faker expression `address.fullAddress`."), "address.fullAddress"),
      EnumValue("AddressLastName", Some("Represents faker expression `address.lastName`."), "address.lastName"),
      EnumValue("AddressLatitude", Some("Represents faker expression `address.latitude`."), "address.latitude"),
      EnumValue("AddressLongitude", Some("Represents faker expression `address.longitude`."), "address.longitude"),
      EnumValue("AddressSecondaryAddress", Some("Represents faker expression `address.secondaryAddress`."), "address.secondaryAddress"),
      EnumValue("AddressState", Some("Represents faker expression `address.state`."), "address.state"),
      EnumValue("AddressStateAbbr", Some("Represents faker expression `address.stateAbbr`."), "address.stateAbbr"),
      EnumValue("AddressStreetAddress", Some("Represents faker expression `address.streetAddress`."), "address.streetAddress"),
      EnumValue("AddressStreetAddressNumber", Some("Represents faker expression `address.streetAddressNumber`."), "address.streetAddressNumber"),
      EnumValue("AddressStreetName", Some("Represents faker expression `address.streetName`."), "address.streetName"),
      EnumValue("AddressStreetPrefix", Some("Represents faker expression `address.streetPrefix`."), "address.streetPrefix"),
      EnumValue("AddressStreetSuffix", Some("Represents faker expression `address.streetSuffix`."), "address.streetSuffix"),
      EnumValue("AddressTimeZone", Some("Represents faker expression `address.timeZone`."), "address.timeZone"),
      EnumValue("AddressZipCode", Some("Represents faker expression `address.zipCode`."), "address.zipCode"),
      EnumValue("AncientGod", Some("Represents faker expression `ancient.god`."), "ancient.god"),
      EnumValue("AncientHero", Some("Represents faker expression `ancient.hero`."), "ancient.hero"),
      EnumValue("AncientPrimordial", Some("Represents faker expression `ancient.primordial`."), "ancient.primordial"),
      EnumValue("AncientTitan", Some("Represents faker expression `ancient.titan`."), "ancient.titan"),
      EnumValue("AppAuthor", Some("Represents faker expression `app.author`."), "app.author"),
      EnumValue("AppName", Some("Represents faker expression `app.name`."), "app.name"),
      EnumValue("AppVersion", Some("Represents faker expression `app.version`."), "app.version"),
      EnumValue("ArtistName", Some("Represents faker expression `artist.name`."), "artist.name"),
      EnumValue("AvatarImage", Some("Represents faker expression `avatar.image`."), "avatar.image"),
      EnumValue("BeerHop", Some("Represents faker expression `beer.hop`."), "beer.hop"),
      EnumValue("BeerMalt", Some("Represents faker expression `beer.malt`."), "beer.malt"),
      EnumValue("BeerName", Some("Represents faker expression `beer.name`."), "beer.name"),
      EnumValue("BeerStyle", Some("Represents faker expression `beer.style`."), "beer.style"),
      EnumValue("BeerYeast", Some("Represents faker expression `beer.yeast`."), "beer.yeast"),
      EnumValue("BookAuthor", Some("Represents faker expression `book.author`."), "book.author"),
      EnumValue("BookGenre", Some("Represents faker expression `book.genre`."), "book.genre"),
      EnumValue("BookPublisher", Some("Represents faker expression `book.publisher`."), "book.publisher"),
      EnumValue("BookTitle", Some("Represents faker expression `book.title`."), "book.title"),
      EnumValue("BoolBool", Some("Represents faker expression `bool.bool`."), "bool.bool"),
      EnumValue("BusinessCreditCardExpiry", Some("Represents faker expression `business.creditCardExpiry`."), "business.creditCardExpiry"),
      EnumValue("BusinessCreditCardNumber", Some("Represents faker expression `business.creditCardNumber`."), "business.creditCardNumber"),
      EnumValue("BusinessCreditCardType", Some("Represents faker expression `business.creditCardType`."), "business.creditCardType"),
      EnumValue("CatBreed", Some("Represents faker expression `cat.breed`."), "cat.breed"),
      EnumValue("CatName", Some("Represents faker expression `cat.name`."), "cat.name"),
      EnumValue("CatRegistry", Some("Represents faker expression `cat.registry`."), "cat.registry"),
      EnumValue("ChuckNorrisFact", Some("Represents faker expression `chuckNorris.fact`."), "chuckNorris.fact"),
      EnumValue("CodeAsin", Some("Represents faker expression `code.asin`."), "code.asin"),
      EnumValue("CodeEan13", Some("Represents faker expression `code.ean13`."), "code.ean13"),
      EnumValue("CodeEan8", Some("Represents faker expression `code.ean8`."), "code.ean8"),
      EnumValue("CodeGtin13", Some("Represents faker expression `code.gtin13`."), "code.gtin13"),
      EnumValue("CodeGtin8", Some("Represents faker expression `code.gtin8`."), "code.gtin8"),
      EnumValue("CodeImei", Some("Represents faker expression `code.imei`."), "code.imei"),
      EnumValue("CodeIsbn10", Some("Represents faker expression `code.isbn10`."), "code.isbn10"),
      EnumValue("CodeIsbn13", Some("Represents faker expression `code.isbn13`."), "code.isbn13"),
      EnumValue("CodeIsbnGroup", Some("Represents faker expression `code.isbnGroup`."), "code.isbnGroup"),
      EnumValue("CodeIsbnGs1", Some("Represents faker expression `code.isbnGs1`."), "code.isbnGs1"),
      EnumValue("CodeIsbnRegistrant", Some("Represents faker expression `code.isbnRegistrant`."), "code.isbnRegistrant"),
      EnumValue("ColorName", Some("Represents faker expression `color.name`."), "color.name"),
      EnumValue("CommerceColor", Some("Represents faker expression `commerce.color`."), "commerce.color"),
      EnumValue("CommerceDepartment", Some("Represents faker expression `commerce.department`."), "commerce.department"),
      EnumValue("CommerceMaterial", Some("Represents faker expression `commerce.material`."), "commerce.material"),
      EnumValue("CommercePrice", Some("Represents faker expression `commerce.price`."), "commerce.price"),
      EnumValue("CommerceProductName", Some("Represents faker expression `commerce.productName`."), "commerce.productName"),
      EnumValue("CommercePromotionCode", Some("Represents faker expression `commerce.promotionCode`."), "commerce.promotionCode"),
      EnumValue("CompanyBs", Some("Represents faker expression `company.bs`."), "company.bs"),
      EnumValue("CompanyBuzzword", Some("Represents faker expression `company.buzzword`."), "company.buzzword"),
      EnumValue("CompanyCatchPhrase", Some("Represents faker expression `company.catchPhrase`."), "company.catchPhrase"),
      EnumValue("CompanyIndustry", Some("Represents faker expression `company.industry`."), "company.industry"),
      EnumValue("CompanyLogo", Some("Represents faker expression `company.logo`."), "company.logo"),
      EnumValue("CompanyName", Some("Represents faker expression `company.name`."), "company.name"),
      EnumValue("CompanyProfession", Some("Represents faker expression `company.profession`."), "company.profession"),
      EnumValue("CompanySuffix", Some("Represents faker expression `company.suffix`."), "company.suffix"),
      EnumValue("CompanyUrl", Some("Represents faker expression `company.url`."), "company.url"),
      EnumValue("CryptoMd5", Some("Represents faker expression `crypto.md5`."), "crypto.md5"),
      EnumValue("CryptoSha1", Some("Represents faker expression `crypto.sha1`."), "crypto.sha1"),
      EnumValue("CryptoSha256", Some("Represents faker expression `crypto.sha256`."), "crypto.sha256"),
      EnumValue("CryptoSha512", Some("Represents faker expression `crypto.sha512`."), "crypto.sha512"),
      EnumValue("CurrencyCode", Some("Represents faker expression `currency.code`."), "currency.code"),
      EnumValue("CurrencyName", Some("Represents faker expression `currency.name`."), "currency.name"),
      EnumValue("DemographicDemonym", Some("Represents faker expression `demographic.demonym`."), "demographic.demonym"),
      EnumValue("DemographicEducationalAttainment", Some("Represents faker expression `demographic.educationalAttainment`."), "demographic.educationalAttainment"),
      EnumValue("DemographicMaritalStatus", Some("Represents faker expression `demographic.maritalStatus`."), "demographic.maritalStatus"),
      EnumValue("DemographicRace", Some("Represents faker expression `demographic.race`."), "demographic.race"),
      EnumValue("DemographicSex", Some("Represents faker expression `demographic.sex`."), "demographic.sex"),
      EnumValue("DogAge", Some("Represents faker expression `dog.age`."), "dog.age"),
      EnumValue("DogBreed", Some("Represents faker expression `dog.breed`."), "dog.breed"),
      EnumValue("DogCoatLength", Some("Represents faker expression `dog.coatLength`."), "dog.coatLength"),
      EnumValue("DogGender", Some("Represents faker expression `dog.gender`."), "dog.gender"),
      EnumValue("DogMemePhrase", Some("Represents faker expression `dog.memePhrase`."), "dog.memePhrase"),
      EnumValue("DogName", Some("Represents faker expression `dog.name`."), "dog.name"),
      EnumValue("DogSize", Some("Represents faker expression `dog.size`."), "dog.size"),
      EnumValue("DogSound", Some("Represents faker expression `dog.sound`."), "dog.sound"),
      EnumValue("DragonBallCharacter", Some("Represents faker expression `dragonBall.character`."), "dragonBall.character"),
      EnumValue("EducatorCampus", Some("Represents faker expression `educator.campus`."), "educator.campus"),
      EnumValue("EducatorCourse", Some("Represents faker expression `educator.course`."), "educator.course"),
      EnumValue("EducatorSecondarySchool", Some("Represents faker expression `educator.secondarySchool`."), "educator.secondarySchool"),
      EnumValue("EducatorUniversity", Some("Represents faker expression `educator.university`."), "educator.university"),
      EnumValue("EsportsEvent", Some("Represents faker expression `esports.event`."), "esports.event"),
      EnumValue("EsportsGame", Some("Represents faker expression `esports.game`."), "esports.game"),
      EnumValue("EsportsLeague", Some("Represents faker expression `esports.league`."), "esports.league"),
      EnumValue("EsportsPlayer", Some("Represents faker expression `esports.player`."), "esports.player"),
      EnumValue("EsportsTeam", Some("Represents faker expression `esports.team`."), "esports.team"),
      EnumValue("FileExtension", Some("Represents faker expression `file.extension`."), "file.extension"),
      EnumValue("FileFileName", Some("Represents faker expression `file.fileName`."), "file.fileName"),
      EnumValue("FileMimeType", Some("Represents faker expression `file.mimeType`."), "file.mimeType"),
      EnumValue("FinanceBic", Some("Represents faker expression `finance.bic`."), "finance.bic"),
      EnumValue("FinanceCreditCard", Some("Represents faker expression `finance.creditCard`."), "finance.creditCard"),
      EnumValue("FinanceIban", Some("Represents faker expression `finance.iban`."), "finance.iban"),
      EnumValue("FoodIngredient", Some("Represents faker expression `food.ingredient`."), "food.ingredient"),
      EnumValue("FoodMeasurement", Some("Represents faker expression `food.measurement`."), "food.measurement"),
      EnumValue("FoodSpice", Some("Represents faker expression `food.spice`."), "food.spice"),
      EnumValue("FriendsCharacter", Some("Represents faker expression `friends.character`."), "friends.character"),
      EnumValue("FriendsLocation", Some("Represents faker expression `friends.location`."), "friends.location"),
      EnumValue("FriendsQuote", Some("Represents faker expression `friends.quote`."), "friends.quote"),
      EnumValue("FunnyNameName", Some("Represents faker expression `funnyName.name`."), "funnyName.name"),
      EnumValue("GameOfThronesCharacter", Some("Represents faker expression `gameOfThrones.character`."), "gameOfThrones.character"),
      EnumValue("GameOfThronesCity", Some("Represents faker expression `gameOfThrones.city`."), "gameOfThrones.city"),
      EnumValue("GameOfThronesDragon", Some("Represents faker expression `gameOfThrones.dragon`."), "gameOfThrones.dragon"),
      EnumValue("GameOfThronesHouse", Some("Represents faker expression `gameOfThrones.house`."), "gameOfThrones.house"),
      EnumValue("GameOfThronesQuote", Some("Represents faker expression `gameOfThrones.quote`."), "gameOfThrones.quote"),
      EnumValue("HackerAbbreviation", Some("Represents faker expression `hacker.abbreviation`."), "hacker.abbreviation"),
      EnumValue("HackerAdjective", Some("Represents faker expression `hacker.adjective`."), "hacker.adjective"),
      EnumValue("HackerIngverb", Some("Represents faker expression `hacker.ingverb`."), "hacker.ingverb"),
      EnumValue("HackerNoun", Some("Represents faker expression `hacker.noun`."), "hacker.noun"),
      EnumValue("HackerVerb", Some("Represents faker expression `hacker.verb`."), "hacker.verb"),
      EnumValue("HarryPotterBook", Some("Represents faker expression `harryPotter.book`."), "harryPotter.book"),
      EnumValue("HarryPotterCharacter", Some("Represents faker expression `harryPotter.character`."), "harryPotter.character"),
      EnumValue("HarryPotterLocation", Some("Represents faker expression `harryPotter.location`."), "harryPotter.location"),
      EnumValue("HarryPotterQuote", Some("Represents faker expression `harryPotter.quote`."), "harryPotter.quote"),
      EnumValue("HipsterWord", Some("Represents faker expression `hipster.word`."), "hipster.word"),
      EnumValue("HitchhikersGuideToTheGalaxyCharacter", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.character`."), "hitchhikersGuideToTheGalaxy.character"),
      EnumValue("HitchhikersGuideToTheGalaxyLocation", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.location`."), "hitchhikersGuideToTheGalaxy.location"),
      EnumValue("HitchhikersGuideToTheGalaxyMarvinQuote", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.marvinQuote`."), "hitchhikersGuideToTheGalaxy.marvinQuote"),
      EnumValue("HitchhikersGuideToTheGalaxyPlanet", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.planet`."), "hitchhikersGuideToTheGalaxy.planet"),
      EnumValue("HitchhikersGuideToTheGalaxyQuote", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.quote`."), "hitchhikersGuideToTheGalaxy.quote"),
      EnumValue("HitchhikersGuideToTheGalaxySpecie", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.specie`."), "hitchhikersGuideToTheGalaxy.specie"),
      EnumValue("HitchhikersGuideToTheGalaxyStarship", Some("Represents faker expression `hitchhikersGuideToTheGalaxy.starship`."), "hitchhikersGuideToTheGalaxy.starship"),
      EnumValue("HobbitCharacter", Some("Represents faker expression `hobbit.character`."), "hobbit.character"),
      EnumValue("HobbitLocation", Some("Represents faker expression `hobbit.location`."), "hobbit.location"),
      EnumValue("HobbitQuote", Some("Represents faker expression `hobbit.quote`."), "hobbit.quote"),
      EnumValue("HobbitThorinsCompany", Some("Represents faker expression `hobbit.thorinsCompany`."), "hobbit.thorinsCompany"),
      EnumValue("HowIMetYourMotherCatchPhrase", Some("Represents faker expression `howIMetYourMother.catchPhrase`."), "howIMetYourMother.catchPhrase"),
      EnumValue("HowIMetYourMotherCharacter", Some("Represents faker expression `howIMetYourMother.character`."), "howIMetYourMother.character"),
      EnumValue("HowIMetYourMotherHighFive", Some("Represents faker expression `howIMetYourMother.highFive`."), "howIMetYourMother.highFive"),
      EnumValue("HowIMetYourMotherQuote", Some("Represents faker expression `howIMetYourMother.quote`."), "howIMetYourMother.quote"),
      EnumValue("IdNumberInvalid", Some("Represents faker expression `idNumber.invalid`."), "idNumber.invalid"),
      EnumValue("IdNumberInvalidSvSeSsn", Some("Represents faker expression `idNumber.invalidSvSeSsn`."), "idNumber.invalidSvSeSsn"),
      EnumValue("IdNumberSsnValid", Some("Represents faker expression `idNumber.ssnValid`."), "idNumber.ssnValid"),
      EnumValue("IdNumberValid", Some("Represents faker expression `idNumber.valid`."), "idNumber.valid"),
      EnumValue("IdNumberValidSvSeSsn", Some("Represents faker expression `idNumber.validSvSeSsn`."), "idNumber.validSvSeSsn"),
      EnumValue("InternetAvatar", Some("Represents faker expression `internet.avatar`."), "internet.avatar"),
      EnumValue("InternetDomainName", Some("Represents faker expression `internet.domainName`."), "internet.domainName"),
      EnumValue("InternetDomainSuffix", Some("Represents faker expression `internet.domainSuffix`."), "internet.domainSuffix"),
      EnumValue("InternetDomainWord", Some("Represents faker expression `internet.domainWord`."), "internet.domainWord"),
      EnumValue("InternetEmailAddress", Some("Represents faker expression `internet.emailAddress`."), "internet.emailAddress"),
      EnumValue("InternetImage", Some("Represents faker expression `internet.image`."), "internet.image"),
      EnumValue("InternetIpV4Address", Some("Represents faker expression `internet.ipV4Address`."), "internet.ipV4Address"),
      EnumValue("InternetIpV4Cidr", Some("Represents faker expression `internet.ipV4Cidr`."), "internet.ipV4Cidr"),
      EnumValue("InternetIpV6Address", Some("Represents faker expression `internet.ipV6Address`."), "internet.ipV6Address"),
      EnumValue("InternetIpV6Cidr", Some("Represents faker expression `internet.ipV6Cidr`."), "internet.ipV6Cidr"),
      EnumValue("InternetMacAddress", Some("Represents faker expression `internet.macAddress`."), "internet.macAddress"),
      EnumValue("InternetPassword", Some("Represents faker expression `internet.password`."), "internet.password"),
      EnumValue("InternetPrivateIpV4Address", Some("Represents faker expression `internet.privateIpV4Address`."), "internet.privateIpV4Address"),
      EnumValue("InternetPublicIpV4Address", Some("Represents faker expression `internet.publicIpV4Address`."), "internet.publicIpV4Address"),
      EnumValue("InternetSafeEmailAddress", Some("Represents faker expression `internet.safeEmailAddress`."), "internet.safeEmailAddress"),
      EnumValue("InternetSlug", Some("Represents faker expression `internet.slug`."), "internet.slug"),
      EnumValue("InternetUrl", Some("Represents faker expression `internet.url`."), "internet.url"),
      EnumValue("InternetUuid", Some("Represents faker expression `internet.uuid`."), "internet.uuid"),
      EnumValue("JobField", Some("Represents faker expression `job.field`."), "job.field"),
      EnumValue("JobKeySkills", Some("Represents faker expression `job.keySkills`."), "job.keySkills"),
      EnumValue("JobPosition", Some("Represents faker expression `job.position`."), "job.position"),
      EnumValue("JobSeniority", Some("Represents faker expression `job.seniority`."), "job.seniority"),
      EnumValue("JobTitle", Some("Represents faker expression `job.title`."), "job.title"),
      EnumValue("LeagueOfLegendsChampion", Some("Represents faker expression `leagueOfLegends.champion`."), "leagueOfLegends.champion"),
      EnumValue("LeagueOfLegendsLocation", Some("Represents faker expression `leagueOfLegends.location`."), "leagueOfLegends.location"),
      EnumValue("LeagueOfLegendsMasteries", Some("Represents faker expression `leagueOfLegends.masteries`."), "leagueOfLegends.masteries"),
      EnumValue("LeagueOfLegendsQuote", Some("Represents faker expression `leagueOfLegends.quote`."), "leagueOfLegends.quote"),
      EnumValue("LeagueOfLegendsRank", Some("Represents faker expression `leagueOfLegends.rank`."), "leagueOfLegends.rank"),
      EnumValue("LeagueOfLegendsSummonerSpell", Some("Represents faker expression `leagueOfLegends.summonerSpell`."), "leagueOfLegends.summonerSpell"),
      EnumValue("LebowskiActor", Some("Represents faker expression `lebowski.actor`."), "lebowski.actor"),
      EnumValue("LebowskiCharacter", Some("Represents faker expression `lebowski.character`."), "lebowski.character"),
      EnumValue("LebowskiQuote", Some("Represents faker expression `lebowski.quote`."), "lebowski.quote"),
      EnumValue("LordOfTheRingsCharacter", Some("Represents faker expression `lordOfTheRings.character`."), "lordOfTheRings.character"),
      EnumValue("LordOfTheRingsLocation", Some("Represents faker expression `lordOfTheRings.location`."), "lordOfTheRings.location"),
      EnumValue("LoremCharacter", Some("Represents faker expression `lorem.character`."), "lorem.character"),
      EnumValue("LoremCharacters", Some("Represents faker expression `lorem.characters`."), "lorem.characters"),
      EnumValue("LoremParagraph", Some("Represents faker expression `lorem.paragraph`."), "lorem.paragraph"),
      EnumValue("LoremSentence", Some("Represents faker expression `lorem.sentence`."), "lorem.sentence"),
      EnumValue("LoremWord", Some("Represents faker expression `lorem.word`."), "lorem.word"),
      EnumValue("MatzQuote", Some("Represents faker expression `matz.quote`."), "matz.quote"),
      EnumValue("MusicChord", Some("Represents faker expression `music.chord`."), "music.chord"),
      EnumValue("MusicInstrument", Some("Represents faker expression `music.instrument`."), "music.instrument"),
      EnumValue("MusicKey", Some("Represents faker expression `music.key`."), "music.key"),
      EnumValue("NameFirstName", Some("Represents faker expression `name.firstName`."), "name.firstName"),
      EnumValue("NameFullName", Some("Represents faker expression `name.fullName`."), "name.fullName"),
      EnumValue("NameLastName", Some("Represents faker expression `name.lastName`."), "name.lastName"),
      EnumValue("NameName", Some("Represents faker expression `name.name`."), "name.name"),
      EnumValue("NameNameWithMiddle", Some("Represents faker expression `name.nameWithMiddle`."), "name.nameWithMiddle"),
      EnumValue("NamePrefix", Some("Represents faker expression `name.prefix`."), "name.prefix"),
      EnumValue("NameSuffix", Some("Represents faker expression `name.suffix`."), "name.suffix"),
      EnumValue("NameTitle", Some("Represents faker expression `name.title`."), "name.title"),
      EnumValue("NameUsername", Some("Represents faker expression `name.username`."), "name.username"),
      EnumValue("NumberDigit", Some("Represents faker expression `number.digit`."), "number.digit"),
      EnumValue("NumberRandomDigit", Some("Represents faker expression `number.randomDigit`."), "number.randomDigit"),
      EnumValue("NumberRandomDigitNotZero", Some("Represents faker expression `number.randomDigitNotZero`."), "number.randomDigitNotZero"),
      EnumValue("NumberRandomNumber", Some("Represents faker expression `number.randomNumber`."), "number.randomNumber"),
      EnumValue("OverwatchHero", Some("Represents faker expression `overwatch.hero`."), "overwatch.hero"),
      EnumValue("OverwatchLocation", Some("Represents faker expression `overwatch.location`."), "overwatch.location"),
      EnumValue("OverwatchQuote", Some("Represents faker expression `overwatch.quote`."), "overwatch.quote"),
      EnumValue("PhoneNumberCellPhone", Some("Represents faker expression `phoneNumber.cellPhone`."), "phoneNumber.cellPhone"),
      EnumValue("PhoneNumberPhoneNumber", Some("Represents faker expression `phoneNumber.phoneNumber`."), "phoneNumber.phoneNumber"),
      EnumValue("PokemonLocation", Some("Represents faker expression `pokemon.location`."), "pokemon.location"),
      EnumValue("PokemonName", Some("Represents faker expression `pokemon.name`."), "pokemon.name"),
      EnumValue("RandomNextDouble", Some("Represents faker expression `random.nextDouble`."), "random.nextDouble"),
      EnumValue("RandomNextLong", Some("Represents faker expression `random.nextLong`."), "random.nextLong"),
      EnumValue("RickAndMortyCharacter", Some("Represents faker expression `rickAndMorty.character`."), "rickAndMorty.character"),
      EnumValue("RickAndMortyLocation", Some("Represents faker expression `rickAndMorty.location`."), "rickAndMorty.location"),
      EnumValue("RickAndMortyQuote", Some("Represents faker expression `rickAndMorty.quote`."), "rickAndMorty.quote"),
      EnumValue("RobinQuote", Some("Represents faker expression `robin.quote`."), "robin.quote"),
      EnumValue("RockBandName", Some("Represents faker expression `rockBand.name`."), "rockBand.name"),
      EnumValue("ShakespeareAsYouLikeItQuote", Some("Represents faker expression `shakespeare.asYouLikeItQuote`."), "shakespeare.asYouLikeItQuote"),
      EnumValue("ShakespeareHamletQuote", Some("Represents faker expression `shakespeare.hamletQuote`."), "shakespeare.hamletQuote"),
      EnumValue("ShakespeareKingRichardIIIQuote", Some("Represents faker expression `shakespeare.kingRichardIIIQuote`."), "shakespeare.kingRichardIIIQuote"),
      EnumValue("ShakespeareRomeoAndJulietQuote", Some("Represents faker expression `shakespeare.romeoAndJulietQuote`."), "shakespeare.romeoAndJulietQuote"),
      EnumValue("SlackEmojiActivity", Some("Represents faker expression `slackEmoji.activity`."), "slackEmoji.activity"),
      EnumValue("SlackEmojiCelebration", Some("Represents faker expression `slackEmoji.celebration`."), "slackEmoji.celebration"),
      EnumValue("SlackEmojiCustom", Some("Represents faker expression `slackEmoji.custom`."), "slackEmoji.custom"),
      EnumValue("SlackEmojiEmoji", Some("Represents faker expression `slackEmoji.emoji`."), "slackEmoji.emoji"),
      EnumValue("SlackEmojiFoodAndDrink", Some("Represents faker expression `slackEmoji.foodAndDrink`."), "slackEmoji.foodAndDrink"),
      EnumValue("SlackEmojiNature", Some("Represents faker expression `slackEmoji.nature`."), "slackEmoji.nature"),
      EnumValue("SlackEmojiObjectsAndSymbols", Some("Represents faker expression `slackEmoji.objectsAndSymbols`."), "slackEmoji.objectsAndSymbols"),
      EnumValue("SlackEmojiPeople", Some("Represents faker expression `slackEmoji.people`."), "slackEmoji.people"),
      EnumValue("SlackEmojiTravelAndPlaces", Some("Represents faker expression `slackEmoji.travelAndPlaces`."), "slackEmoji.travelAndPlaces"),
      EnumValue("SpaceAgency", Some("Represents faker expression `space.agency`."), "space.agency"),
      EnumValue("SpaceAgencyAbbreviation", Some("Represents faker expression `space.agencyAbbreviation`."), "space.agencyAbbreviation"),
      EnumValue("SpaceCompany", Some("Represents faker expression `space.company`."), "space.company"),
      EnumValue("SpaceConstellation", Some("Represents faker expression `space.constellation`."), "space.constellation"),
      EnumValue("SpaceDistanceMeasurement", Some("Represents faker expression `space.distanceMeasurement`."), "space.distanceMeasurement"),
      EnumValue("SpaceGalaxy", Some("Represents faker expression `space.galaxy`."), "space.galaxy"),
      EnumValue("SpaceMeteorite", Some("Represents faker expression `space.meteorite`."), "space.meteorite"),
      EnumValue("SpaceMoon", Some("Represents faker expression `space.moon`."), "space.moon"),
      EnumValue("SpaceNasaSpaceCraft", Some("Represents faker expression `space.nasaSpaceCraft`."), "space.nasaSpaceCraft"),
      EnumValue("SpaceNebula", Some("Represents faker expression `space.nebula`."), "space.nebula"),
      EnumValue("SpacePlanet", Some("Represents faker expression `space.planet`."), "space.planet"),
      EnumValue("SpaceStar", Some("Represents faker expression `space.star`."), "space.star"),
      EnumValue("SpaceStarCluster", Some("Represents faker expression `space.starCluster`."), "space.starCluster"),
      EnumValue("StarTrekCharacter", Some("Represents faker expression `starTrek.character`."), "starTrek.character"),
      EnumValue("StarTrekLocation", Some("Represents faker expression `starTrek.location`."), "starTrek.location"),
      EnumValue("StarTrekSpecie", Some("Represents faker expression `starTrek.specie`."), "starTrek.specie"),
      EnumValue("StarTrekVillain", Some("Represents faker expression `starTrek.villain`."), "starTrek.villain"),
      EnumValue("StockNsdqSymbol", Some("Represents faker expression `stock.nsdqSymbol`."), "stock.nsdqSymbol"),
      EnumValue("StockNyseSymbol", Some("Represents faker expression `stock.nyseSymbol`."), "stock.nyseSymbol"),
      EnumValue("SuperheroDescriptor", Some("Represents faker expression `superhero.descriptor`."), "superhero.descriptor"),
      EnumValue("SuperheroName", Some("Represents faker expression `superhero.name`."), "superhero.name"),
      EnumValue("SuperheroPower", Some("Represents faker expression `superhero.power`."), "superhero.power"),
      EnumValue("SuperheroPrefix", Some("Represents faker expression `superhero.prefix`."), "superhero.prefix"),
      EnumValue("SuperheroSuffix", Some("Represents faker expression `superhero.suffix`."), "superhero.suffix"),
      EnumValue("TeamCreature", Some("Represents faker expression `team.creature`."), "team.creature"),
      EnumValue("TeamName", Some("Represents faker expression `team.name`."), "team.name"),
      EnumValue("TeamSport", Some("Represents faker expression `team.sport`."), "team.sport"),
      EnumValue("TeamState", Some("Represents faker expression `team.state`."), "team.state"),
      EnumValue("TwinPeaksCharacter", Some("Represents faker expression `twinPeaks.character`."), "twinPeaks.character"),
      EnumValue("TwinPeaksLocation", Some("Represents faker expression `twinPeaks.location`."), "twinPeaks.location"),
      EnumValue("TwinPeaksQuote", Some("Represents faker expression `twinPeaks.quote`."), "twinPeaks.quote"),
      EnumValue("UniversityName", Some("Represents faker expression `university.name`."), "university.name"),
      EnumValue("UniversityPrefix", Some("Represents faker expression `university.prefix`."), "university.prefix"),
      EnumValue("UniversitySuffix", Some("Represents faker expression `university.suffix`."), "university.suffix"),
      EnumValue("WeatherDescription", Some("Represents faker expression `weather.description`."), "weather.description"),
      EnumValue("WeatherTemperatureCelsius", Some("Represents faker expression `weather.temperatureCelsius`."), "weather.temperatureCelsius"),
      EnumValue("WeatherTemperatureFahrenheit", Some("Represents faker expression `weather.temperatureFahrenheit`."), "weather.temperatureFahrenheit"),
      EnumValue("WitcherCharacter", Some("Represents faker expression `witcher.character`."), "witcher.character"),
      EnumValue("WitcherLocation", Some("Represents faker expression `witcher.location`."), "witcher.location"),
      EnumValue("WitcherMonster", Some("Represents faker expression `witcher.monster`."), "witcher.monster"),
      EnumValue("WitcherQuote", Some("Represents faker expression `witcher.quote`."), "witcher.quote"),
      EnumValue("WitcherSchool", Some("Represents faker expression `witcher.school`."), "witcher.school"),
      EnumValue("WitcherWitcher", Some("Represents faker expression `witcher.witcher`."), "witcher.witcher"),
      EnumValue("YodaQuote", Some("Represents faker expression `yoda.quote`."), "yoda.quote"),
      EnumValue("ZeldaCharacter", Some("Represents faker expression `zelda.character`."), "zelda.character"),
      EnumValue("ZeldaGame", Some("Represents faker expression `zelda.game`."), "zelda.game")
    ))

  object Args {
    val Expr = Argument("expr", OptionInputType(StringType))
    val Type = Argument("type", OptionInputType(FakeType))
    val Locale = Argument("locale", OptionInputType(StringType))
    val Seed = Argument("seed", OptionInputType(IntType))
    val MinElems = Argument("min", OptionInputType(IntType))
    val MaxElems = Argument("max", OptionInputType(IntType))
    val Past = Argument("past", OptionInputType(BooleanType))
    val Future = Argument("future", OptionInputType(BooleanType))
  }

  object Dirs {
    val Fake = Directive("fake",
      arguments = Args.Expr :: Args.Type :: Args.MinElems :: Args.MaxElems :: Args.Past :: Args.Future :: Nil,
      locations = Set(DirectiveLocation.FieldDefinition))

    val FakeConfig = Directive("fakeConfig",
      arguments = Args.Locale :: Args.Seed :: Nil,
      locations = Set(DirectiveLocation.Schema))
  }
}

case class FakeValue(expr: Option[String], min: Option[Int], max: Option[Int], past: Option[Boolean], future: Option[Boolean], rnd: Random, faker: Faker) {
  private lazy val withoutExpr = copy(expr = None, min = None, max = None)
  
  def coerce(ctx: Context[GatewayContext, _]): Action[GatewayContext, Any] = {
    def coerceType(tpe: OutputType[_]): Any = tpe match {
      case OptionType(ofType) ⇒
        if (rnd.nextBoolean()) None
        else coerceType(ofType)

      case ListType(ofType) ⇒
        val size = min.getOrElse(0) + rnd.nextInt(max.fold(20)(max ⇒ max - min.getOrElse(0) + 1))

        (1 to size).toVector.map(_ ⇒ coerceType(ofType))

      case s: ScalarAlias[_, _] ⇒
        coerceType(s.aliasFor)

      case s: ScalarType[_] if s.name == StringType.name ⇒
        expr match {
          case Some(e) ⇒ resolveExpr(e)
          case None ⇒ faker.lorem().paragraph()
        }

      case s: ScalarType[_] if s.name == IntType.name ⇒
        expr match {
          case Some(e) ⇒ resolveExpr(e).toInt
          case None ⇒ rnd.nextInt()
        }

      case s: ScalarType[_] if s.name == LongType.name ⇒
        expr match {
          case Some(e) ⇒ resolveExpr(e).toLong
          case None ⇒ rnd.nextLong()
        }

      case s: ScalarType[_] if s.name == BigIntType.name ⇒
        expr match {
          case Some(e) ⇒ BigInt(resolveExpr(e))
          case None ⇒ BigInt(rnd.nextLong())
        }

      case s: ScalarType[_] if s.name == BigDecimalType.name ⇒
        expr match {
          case Some(e) ⇒ BigDecimal(resolveExpr(e))
          case None ⇒ BigDecimal(rnd.nextDouble())
        }

      case s: ScalarType[_] if s.name == IDType.name ⇒
        expr match {
          case Some(e) ⇒ resolveExpr(e)
          case None ⇒ "" + rnd.nextLong()
        }

      case s: ScalarType[_] if s.name == FloatType.name ⇒
        expr match {
          case Some(e) ⇒ resolveExpr(e).toDouble
          case None ⇒ rnd.nextDouble()
        }

      case s: ScalarType[_] if s.name == BooleanType.name ⇒
        expr match {
          case Some(e) ⇒ resolveExpr(e).toBoolean
          case None ⇒ rnd.nextBoolean()
        }

      case s: ScalarType[_] if s.name == CustomScalars.DateTimeType.name ⇒
        resolveDate

      case e: EnumType[_] ⇒
        e.values(rnd.nextInt(e.values.size)).value

      case s: CompositeType[_] ⇒
        withoutExpr

      case t ⇒
        throw new IllegalStateException(s"Can't fake type ${SchemaRenderer.renderTypeName(t)} just yet.")
    }

    coerceType(ctx.field.fieldType)
  }

  def resolveExpr(e: String) = {
    if (FakeValue.ExpressionPattern.matcher(e).find())
      faker.expression(e)
    else
      faker.expression("#{" + e + "}")
  }
  
  def resolveDate = {
    val isPast =
      (past, future) match {
        case (Some(p), Some(f)) ⇒ p
        case (Some(p), None) ⇒ p
        case (None, Some(f)) ⇒ !f
        case (None, None) ⇒ rnd.nextBoolean()
      }

    val date =
      if (isPast)
        faker.date().past(700, TimeUnit.DAYS)
      else
        faker.date().future(700, TimeUnit.DAYS)

    ZonedDateTime.ofInstant(date.toInstant, ZoneId.of("UTC"))
  }
}

object FakeValue {
  val ExpressionPattern = Pattern.compile("#\\{([a-z0-9A-Z_.]+)\\s?(?:'([^']+)')?(?:,'([^']+)')*\\}")
}




